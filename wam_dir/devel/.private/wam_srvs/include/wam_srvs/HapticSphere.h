// Generated by gencpp from file wam_srvs/HapticSphere.msg
// DO NOT EDIT!


#ifndef WAM_SRVS_MESSAGE_HAPTICSPHERE_H
#define WAM_SRVS_MESSAGE_HAPTICSPHERE_H

#include <ros/service_traits.h>


#include <wam_srvs/HapticSphereRequest.h>
#include <wam_srvs/HapticSphereResponse.h>


namespace wam_srvs
{

struct HapticSphere
{

typedef HapticSphereRequest Request;
typedef HapticSphereResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct HapticSphere
} // namespace wam_srvs


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::wam_srvs::HapticSphere > {
  static const char* value()
  {
    return "26022341c3342c1799fc44701262bee2";
  }

  static const char* value(const ::wam_srvs::HapticSphere&) { return value(); }
};

template<>
struct DataType< ::wam_srvs::HapticSphere > {
  static const char* value()
  {
    return "wam_srvs/HapticSphere";
  }

  static const char* value(const ::wam_srvs::HapticSphere&) { return value(); }
};


// service_traits::MD5Sum< ::wam_srvs::HapticSphereRequest> should match 
// service_traits::MD5Sum< ::wam_srvs::HapticSphere > 
template<>
struct MD5Sum< ::wam_srvs::HapticSphereRequest>
{
  static const char* value()
  {
    return MD5Sum< ::wam_srvs::HapticSphere >::value();
  }
  static const char* value(const ::wam_srvs::HapticSphereRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::wam_srvs::HapticSphereRequest> should match 
// service_traits::DataType< ::wam_srvs::HapticSphere > 
template<>
struct DataType< ::wam_srvs::HapticSphereRequest>
{
  static const char* value()
  {
    return DataType< ::wam_srvs::HapticSphere >::value();
  }
  static const char* value(const ::wam_srvs::HapticSphereRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::wam_srvs::HapticSphereResponse> should match 
// service_traits::MD5Sum< ::wam_srvs::HapticSphere > 
template<>
struct MD5Sum< ::wam_srvs::HapticSphereResponse>
{
  static const char* value()
  {
    return MD5Sum< ::wam_srvs::HapticSphere >::value();
  }
  static const char* value(const ::wam_srvs::HapticSphereResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::wam_srvs::HapticSphereResponse> should match 
// service_traits::DataType< ::wam_srvs::HapticSphere > 
template<>
struct DataType< ::wam_srvs::HapticSphereResponse>
{
  static const char* value()
  {
    return DataType< ::wam_srvs::HapticSphere >::value();
  }
  static const char* value(const ::wam_srvs::HapticSphereResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // WAM_SRVS_MESSAGE_HAPTICSPHERE_H
